/*
 * File: StoneMasonKarel.java
 * --------------------------
 * The StoneMasonKarel subclass as it appears here does nothing.
 * When you finish writing it, it should solve the "repair the quad"
 * problem from Assignment 1.  In addition to editing the program,
 * you should be sure to edit this comment so that it no longer
 * indicates that the program does nothing.
 */

import stanford.karel.*;

public class StoneMasonKarel extends SuperKarel {
	public void run() {
		turnLeft () ;
		for (int i = 0; i < 4; i++){
			nyoom () ;
			turno () ;
			nextoPillar () ;
		}
	}
	private void nyoom () {
		while (frontIsClear()) {
			while (noBeepersPresent()) {
				putBeeper () ;
			}
			move () ;
			}
		while (noBeepersPresent()) {
				putBeeper () ;
		}
	}
	private void turno () {
		if (frontIsBlocked()) {
			turnAround () ;
		}
	}
	private void nextoPillar () {
		while (frontIsClear()) {
			move () ;
		}
		turnLeft () ;
		if (frontIsClear ()){
		for ( int i = 0; i < 4; i++) {
			move () ;
		}
		turnLeft () ;
		}
	}
}
